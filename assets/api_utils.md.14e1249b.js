import{_ as s,c as a,o as n,e as l}from"./app.e6ae406b.js";const C=JSON.parse('{"title":"Utils API","description":"","frontmatter":{},"headers":[{"level":2,"title":"oicq 库中的所有导出","slug":"oicq-库中的所有导出","link":"#oicq-库中的所有导出","children":[]},{"level":2,"title":"一些相关路径","slug":"一些相关路径","link":"#一些相关路径","children":[]},{"level":2,"title":"各种类型","slug":"各种类型","link":"#各种类型","children":[]},{"level":2,"title":"axios/http","slug":"axios-http","link":"#axios-http","children":[]},{"level":2,"title":"dayjs/time","slug":"dayjs-time","link":"#dayjs-time","children":[]},{"level":2,"title":"wait","slug":"wait","link":"#wait","children":[]},{"level":2,"title":"md5","slug":"md5","link":"#md5","children":[]},{"level":2,"title":"qs","slug":"qs","link":"#qs","children":[]},{"level":2,"title":"randomInt","slug":"randomint","link":"#randomint","children":[]},{"level":2,"title":"randomItem","slug":"randomitem","link":"#randomitem","children":[]},{"level":2,"title":"parseUin","slug":"parseuin","link":"#parseuin","children":[]},{"level":2,"title":"getTargetId","slug":"gettargetid","link":"#gettargetid","children":[]},{"level":2,"title":"stringifyError","slug":"stringifyerror","link":"#stringifyerror","children":[]},{"level":2,"title":"ensureArray","slug":"ensurearray","link":"#ensurearray","children":[]},{"level":2,"title":"getGroupAvatarLink","slug":"getgroupavatarlink","link":"#getgroupavatarlink","children":[]},{"level":2,"title":"getQQAvatarLink","slug":"getqqavatarlink","link":"#getqqavatarlink","children":[]},{"level":2,"title":"canBan","slug":"canban","link":"#canban","children":[]},{"level":2,"title":"makeForwardMsg","slug":"makeforwardmsg","link":"#makeforwardmsg","children":[]},{"level":2,"title":"uploadFileToDir","slug":"uploadfiletodir","link":"#uploadfiletodir","children":[]}],"relativePath":"api/utils.md","lastUpdated":null}'),o={name:"api/utils.md"},p=l(`<h1 id="utils-api" tabindex="-1">Utils API <a class="header-anchor" href="#utils-api" aria-hidden="true">#</a></h1><p>除了 <code>KiviPlugin</code> 类中封装了一些常用的消息处理 API 之外, 框架的核心库 <code>@kivibot/core</code> 也根据实际开发的反馈, 提炼并导出了一系列常用的<strong>实用函数</strong>, <strong>属性</strong>和 <strong>TS 类型声明</strong>等, 用来减少重复代码, 提高插件的开发效率。</p><h2 id="oicq-库中的所有导出" tabindex="-1">oicq 库中的所有导出 <a class="header-anchor" href="#oicq-库中的所有导出" aria-hidden="true">#</a></h2><p>在编写插件时, 你不需要从 <code>oicq</code> 库中导入任何函数或类型, <code>@kivibot/core</code> 做了全部的导出, 直接从 <code>@kivibot/core</code> 中引入即可, 例如：</p><div class="language-diff"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#E06C75;">- import type { Client } from &#39;oicq&#39;</span></span>
<span class="line"><span style="color:#98C379;">+ import type { Client } from &#39;@kivibot/core&#39;</span></span>
<span class="line"></span></code></pre></div><h2 id="一些相关路径" tabindex="-1">一些相关路径 <a class="header-anchor" href="#一些相关路径" aria-hidden="true">#</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/** node 当前执行路径 */</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">CWD</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">cwd</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/** 配置文件路径 */</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">ConfigPath</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">join</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">CWD</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;kivi.json&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/** 框架 node_modules 路径 */</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">NodeModulesDir</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">join</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">CWD</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;node_modules&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/** oicq 数据目录 */</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">OicqDataDir</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">join</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">CWD</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;data/oicq&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/** logs 日志目录 */</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">LogDir</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">join</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">CWD</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;logs&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/** plugins 插件目录 */</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">PluginDir</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">join</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">CWD</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;plugins&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/** plugins 插件数据目录 */</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">PluginDataDir</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">join</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">CWD</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;data/plugins&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre></div><h2 id="各种类型" tabindex="-1">各种类型 <a class="header-anchor" href="#各种类型" aria-hidden="true">#</a></h2><p>到模块目录下查看相关的 TS 类型声明。</p><h2 id="axios-http" tabindex="-1">axios/http <a class="header-anchor" href="#axios-http" aria-hidden="true">#</a></h2><p>框架内置了 axios, 如果你也习惯使用 axios 发起请求, 你可以引入使用 axios 简单封装过的 http, 或者直接引入 axios, 无需额外安装 axios。</p><blockquote><p>你可以前往 <a href="https://github.com/KiviBotLab/KiviBot/blob/main/src/utils/request.ts" target="_blank" rel="noreferrer">GitHub</a> 查看 http 的简单封装源码。</p></blockquote><div class="language-diff"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#E06C75;">- import axios from &#39;axios&#39;</span></span>
<span class="line"><span style="color:#98C379;">+ import { axios } from &#39;@kivibot/core&#39;</span></span>
<span class="line"><span style="color:#98C379;">+ import { http } from &#39;@kivibot/core&#39;</span></span>
<span class="line"></span></code></pre></div><h2 id="dayjs-time" tabindex="-1">dayjs/time <a class="header-anchor" href="#dayjs-time" aria-hidden="true">#</a></h2><p>框架内置了 dayjs 用于处理时间, 它有着和 momentjs 同样的 API 但是更加精简, 如果你也习惯使用 dayjs 处理时间, 你可以引入简单封装的 time, 或者直接引入 dayjs 进行操作, 无需额外安装 dayjs 或者 momentjs。</p><div class="language-diff"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#E06C75;">- import dayjs from &#39;dayjs&#39;</span></span>
<span class="line"><span style="color:#E06C75;">- import moment from &#39;moment&#39;</span></span>
<span class="line"><span style="color:#98C379;">+ import { dayjs } from &#39;@kivibot/core&#39;</span></span>
<span class="line"><span style="color:#98C379;">+ import { time } from &#39;@kivibot/core&#39;</span></span>
<span class="line"></span></code></pre></div><p><code>time</code> 的函数签名如下</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 取格式化时间，默认当前时间，使用 dayjs 的 format 函数封装</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E5C07B;font-style:italic;">{string | undefined}</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E06C75;font-style:italic;">format</span><span style="color:#7F848E;font-style:italic;"> 格式化模板，默认&#39;YYYY-MM-DD HH:mm&#39;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E5C07B;font-style:italic;">{Date | undefined}</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E06C75;font-style:italic;">date</span><span style="color:#7F848E;font-style:italic;"> 待格式化的时间，默认当前时间</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@return</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E5C07B;font-style:italic;">{string}</span><span style="color:#7F848E;font-style:italic;"> 格式化后的时间字符串</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">declare</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">time</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">format</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">date</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Date</span><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">string</span></span>
<span class="line"></span></code></pre></div><h2 id="wait" tabindex="-1">wait <a class="header-anchor" href="#wait" aria-hidden="true">#</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 异步延时函数</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E5C07B;font-style:italic;">{number}</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E06C75;font-style:italic;">ms</span><span style="color:#7F848E;font-style:italic;"> 等待毫秒数</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@return</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E5C07B;font-style:italic;">{Promise&lt;void&gt;}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">declare</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">wait</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">ms</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">Promise</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">void</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="md5" tabindex="-1">md5 <a class="header-anchor" href="#md5" aria-hidden="true">#</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * MD5 加密</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E5C07B;font-style:italic;">{BinaryLike}</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E06C75;font-style:italic;">text</span><span style="color:#7F848E;font-style:italic;"> 待 MD5 加密数据，可以是 \`string\` 字符串</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E5C07B;font-style:italic;">{BinaryToTextEncoding | undefined}</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E06C75;font-style:italic;">encoding</span><span style="color:#7F848E;font-style:italic;"> 返回数据编码，不传返回 \`Buffer\`，可传 \`hex\` 等返回字符串</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@return</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E5C07B;font-style:italic;">{Buffer | string}</span><span style="color:#7F848E;font-style:italic;"> MD5 加密后的数据</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">declare</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">md5</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">text</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">BinaryLike</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">encoding</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">BinaryToTextEncoding</span><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">Buffer</span></span>
<span class="line"></span></code></pre></div><h2 id="qs" tabindex="-1">qs <a class="header-anchor" href="#qs" aria-hidden="true">#</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * JS 对象转换成 \`urlencoded\` 格式字符串 { name: &#39;Bob&#39;, age: 18 } =&gt; name=Bob&amp;age=18</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E5C07B;font-style:italic;">{Record&lt;number | string, any&gt;}</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E06C75;font-style:italic;">obj</span><span style="color:#7F848E;font-style:italic;"> JS 对象</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@return</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E5C07B;font-style:italic;">{string}</span><span style="color:#7F848E;font-style:italic;"> 转换后的字符串</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">declare</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">qs</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">obj</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Record</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">any</span><span style="color:#ABB2BF;">&gt;): </span><span style="color:#E5C07B;">string</span></span>
<span class="line"></span></code></pre></div><h2 id="randomint" tabindex="-1">randomInt <a class="header-anchor" href="#randomint" aria-hidden="true">#</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 生成随机整数</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E5C07B;font-style:italic;">{number}</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E06C75;font-style:italic;">min</span><span style="color:#7F848E;font-style:italic;"> 最小值</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E5C07B;font-style:italic;">{number}</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E06C75;font-style:italic;">max</span><span style="color:#7F848E;font-style:italic;"> 最大值</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@return</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E5C07B;font-style:italic;">{number}</span><span style="color:#7F848E;font-style:italic;"> 随机范围内的整数</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">declare</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">randomInt</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">min</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">max</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">number</span></span>
<span class="line"></span></code></pre></div><h2 id="randomitem" tabindex="-1">randomItem <a class="header-anchor" href="#randomitem" aria-hidden="true">#</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 取数组内随机一项</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E5C07B;font-style:italic;">{Array&lt;T&gt;}</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E06C75;font-style:italic;">array</span><span style="color:#7F848E;font-style:italic;"> 待操作数组</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@return</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E5C07B;font-style:italic;">{T}</span><span style="color:#7F848E;font-style:italic;"> 数组内的随机一项</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">declare</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">randomItem</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">any</span><span style="color:#ABB2BF;">&gt;(</span><span style="color:#E06C75;font-style:italic;">array</span><span style="color:#ABB2BF;">: [</span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">, ...</span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">[]]): </span><span style="color:#E5C07B;">T</span></span>
<span class="line"></span></code></pre></div><h2 id="parseuin" tabindex="-1">parseUin <a class="header-anchor" href="#parseuin" aria-hidden="true">#</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 解析 qq，支持艾特，可以是 \`1141284758\` 或者是 \`{at:1141284758}\`</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E5C07B;font-style:italic;">{string}</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E06C75;font-style:italic;">qqLikeStr</span><span style="color:#7F848E;font-style:italic;"> 待解析的字符串</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@return</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E5C07B;font-style:italic;">{number}</span><span style="color:#7F848E;font-style:italic;"> 解析结果</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">declare</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">parseUin</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">qqLikeStr</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">number</span></span>
<span class="line"></span></code></pre></div><h2 id="gettargetid" tabindex="-1">getTargetId <a class="header-anchor" href="#gettargetid" aria-hidden="true">#</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 取消息来源的目标 id，私聊取好友QQ，群聊取群号，讨论组取讨论组号</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E5C07B;font-style:italic;">{AllMessageEvent}</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E06C75;font-style:italic;">event</span><span style="color:#7F848E;font-style:italic;"> 消息事件参数</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@return</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E5C07B;font-style:italic;">{number}</span><span style="color:#7F848E;font-style:italic;"> 目标 id</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">declare</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">getTargetId</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">event</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">AllMessageEvent</span><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">number</span></span>
<span class="line"></span></code></pre></div><h2 id="stringifyerror" tabindex="-1">stringifyError <a class="header-anchor" href="#stringifyerror" aria-hidden="true">#</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 错误 stringify</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E5C07B;font-style:italic;">{any}</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E06C75;font-style:italic;">error</span><span style="color:#7F848E;font-style:italic;"> 待处理错误</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@return</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E5C07B;font-style:italic;">{string}</span><span style="color:#7F848E;font-style:italic;"> stringify 结果</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">declare</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">stringifyError</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">error</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">any</span><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">string</span></span>
<span class="line"></span></code></pre></div><h2 id="ensurearray" tabindex="-1">ensureArray <a class="header-anchor" href="#ensurearray" aria-hidden="true">#</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * 确保是数组</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E5C07B;font-style:italic;">{T | T[]}</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E06C75;font-style:italic;">value</span><span style="color:#7F848E;font-style:italic;"> 确保是数组的值</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@return</span><span style="color:#7F848E;font-style:italic;"> </span><span style="color:#E5C07B;font-style:italic;">{T[]}</span><span style="color:#7F848E;font-style:italic;"> 数组结果</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">declare</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">ensureArray</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">any</span><span style="color:#ABB2BF;">&gt;(</span><span style="color:#E06C75;font-style:italic;">value</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">[]): </span><span style="color:#E5C07B;">T</span><span style="color:#ABB2BF;">[]</span></span>
<span class="line"></span></code></pre></div><h2 id="getgroupavatarlink" tabindex="-1">getGroupAvatarLink <a class="header-anchor" href="#getgroupavatarlink" aria-hidden="true">#</a></h2><p>返回任意群聊的头像直链。</p><p>函数签名如下, size 为 <code>100</code> 或 <code>640</code> (高清)</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">getGroupAvatarLink</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">group</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">size</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">string</span></span>
<span class="line"></span></code></pre></div><h2 id="getqqavatarlink" tabindex="-1">getQQAvatarLink <a class="header-anchor" href="#getqqavatarlink" aria-hidden="true">#</a></h2><p>返回任意 QQ 的头像直链。</p><p>函数签名如下, size 为 <code>100</code> 或 <code>640</code> (高清)</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">getQQAvatarLink</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">qq</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">size</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">string</span></span>
<span class="line"></span></code></pre></div><h2 id="canban" tabindex="-1">canBan <a class="header-anchor" href="#canban" aria-hidden="true">#</a></h2><p>判断 Bot 是否有权限或者是否能够禁言目标群的目标 qq。</p><p>函数签名如下</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">declare</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">canBan</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;font-style:italic;">this</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Client</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">gid</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">qq</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">Promise</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">boolean</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>使用示例</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">canBan</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;@kivibot/core&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">hasRight</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">await</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">canBan</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">bot</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">12345678</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">123456</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre></div><h2 id="makeforwardmsg" tabindex="-1">makeForwardMsg <a class="header-anchor" href="#makeforwardmsg" aria-hidden="true">#</a></h2><p>对 oicq 的消息记录合并转发做了修改, 支持自定义标题和预览内容。</p><p>函数签名如下</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/** 制作合并转发消息，可自定义标题、内容、底部说明文字 */</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">declare</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">makeForwardMsg</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;font-style:italic;">this</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Client</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;font-style:italic;">msglist</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Forwardable</span><span style="color:#ABB2BF;">[] | </span><span style="color:#E5C07B;">Forwardable</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;font-style:italic;">title</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;font-style:italic;">desc</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;font-style:italic;">dm</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">boolean</span></span>
<span class="line"><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">Promise</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">XmlElem</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>使用示例</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">makeForwardMsg</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;@kivibot/core&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">msg</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">await</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">makeForwardMsg</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">bot</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  [</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">nickname</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;Viki&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">user_id</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1141284758</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#E06C75;">message</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;Hello&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">  ],</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#98C379;">&#39;来自 Viki 的消息&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#98C379;">&#39;Hello&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre></div><h2 id="uploadfiletodir" tabindex="-1">uploadFileToDir <a class="header-anchor" href="#uploadfiletodir" aria-hidden="true">#</a></h2><p>上传本地文件到指定群的指定文件夹。（不存在时自动创建）</p><p>函数签名如下</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">declare</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">uploadFileToDir</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;font-style:italic;">this</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Client</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;font-style:italic;">group</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;font-style:italic;">filepath</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;font-style:italic;">uploadFilename</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;font-style:italic;">dirname</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span></span>
<span class="line"><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">Promise</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">boolean</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>使用示例</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">uploadFileToDir</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;@kivibot/core&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">isOK</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">await</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">uploadFileToDir</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">bot</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">group_id</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">filepath</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;config.json&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">bot</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">uin</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre></div>`,62),t=[p];function e(c,r,i,y,B,F){return n(),a("div",null,t)}const E=s(o,[["render",e]]);export{C as __pageData,E as default};
