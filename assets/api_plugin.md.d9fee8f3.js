import{_ as p,c as e,a as s,b as n,d as a,e as o,o as t,r as c}from"./app.e6ae406b.js";const zs=JSON.parse('{"title":"KiviPlugin API","description":"","frontmatter":{},"headers":[{"level":2,"title":"KiviPlugin()","slug":"kiviplugin","link":"#kiviplugin","children":[]},{"level":2,"title":"plugin.name","slug":"plugin-name","link":"#plugin-name","children":[]},{"level":2,"title":"plugin.version","slug":"plugin-version","link":"#plugin-version","children":[]},{"level":2,"title":"plugin.dataDir","slug":"plugin-datadir","link":"#plugin-datadir","children":[]},{"level":2,"title":"plugin.logger","slug":"plugin-logger","link":"#plugin-logger","children":[]},{"level":2,"title":"plugin.bot","slug":"plugin-bot","link":"#plugin-bot","children":[]},{"level":2,"title":"plugin.admins","slug":"plugin-admins","link":"#plugin-admins","children":[]},{"level":2,"title":"plugin.mainAdmin","slug":"plugin-mainadmin","link":"#plugin-mainadmin","children":[]},{"level":2,"title":"plugin.subAdmins","slug":"plugin-subadmins","link":"#plugin-subadmins","children":[]},{"level":2,"title":"plugin.onMounted()","slug":"plugin-onmounted","link":"#plugin-onmounted","children":[]},{"level":2,"title":"plugin.onUnmounted()","slug":"plugin-onunmounted","link":"#plugin-onunmounted","children":[]},{"level":2,"title":"plugin.throwPluginError()","slug":"plugin-throwpluginerror","link":"#plugin-throwpluginerror","children":[]},{"level":2,"title":"plugin.saveConfig()","slug":"plugin-saveconfig","link":"#plugin-saveconfig","children":[]},{"level":2,"title":"plugin.loadConfig()","slug":"plugin-loadconfig","link":"#plugin-loadconfig","children":[]},{"level":2,"title":"plugin.onMessage()","slug":"plugin-onmessage","link":"#plugin-onmessage","children":[]},{"level":2,"title":"plugin.onGroupMessage()","slug":"plugin-ongroupmessage","link":"#plugin-ongroupmessage","children":[]},{"level":2,"title":"plugin.onPrivateMessage()","slug":"plugin-onprivatemessage","link":"#plugin-onprivatemessage","children":[]},{"level":2,"title":"plugin.onMatch()","slug":"plugin-onmatch","link":"#plugin-onmatch","children":[]},{"level":2,"title":"plugin.onAdminMatch()","slug":"plugin-onadminmatch","link":"#plugin-onadminmatch","children":[]},{"level":2,"title":"plugin.onCmd()","slug":"plugin-oncmd","link":"#plugin-oncmd","children":[]},{"level":2,"title":"plugin.onAdminCmd()","slug":"plugin-onadmincmd","link":"#plugin-onadmincmd","children":[]},{"level":2,"title":"plugin.cron()","slug":"plugin-cron","link":"#plugin-cron","children":[]},{"level":2,"title":"plugin.log()","slug":"plugin-log","link":"#plugin-log","children":[]},{"level":2,"title":"plugin.debug()","slug":"plugin-debug","link":"#plugin-debug","children":[]},{"level":2,"title":"plugin.on()","slug":"plugin-on","link":"#plugin-on","children":[]},{"level":2,"title":"plugin.off()","slug":"plugin-off","link":"#plugin-off","children":[]},{"level":2,"title":"plugin.once()","slug":"plugin-once","link":"#plugin-once","children":[]}],"relativePath":"api/plugin.md","lastUpdated":null}'),r={name:"api/plugin.md"},i=o('<h1 id="kivi_plugin-apis" tabindex="-1">KiviPlugin API <a class="header-anchor" href="#kivi_plugin-apis" aria-hidden="true">#</a></h1><div class="warning custom-block"><p class="custom-block-title">请注意</p><p>框架仍处于<strong>测试阶段</strong>, 插件的 API 可能发生较大的更改, 请勿用于生产环境。</p></div><p><code>KiviPlugin</code> 类的 API 说明如下, 你也可以前往 <a href="https://github.com/KiviBotLab/KiviBot/blob/main/src/core/plugin/plugin.ts" target="_blank" rel="noreferrer">GitHub</a> 查看详细实现。</p>',3),B={id:"kiviplugin",tabindex:"-1"},y=s("a",{class:"header-anchor",href:"#kiviplugin","aria-hidden":"true"},"#",-1),d=o(`<p>实例化一个 <code>KiviPlugin</code>。</p><p>函数签名：<code>KiviPlugin(name, version, [conf])</code></p><p><strong>参数说明</strong>：</p><ul><li><code>name</code>: <code>string</code> 类型, 必填, 插件名, 建议英文</li><li><code>version</code>: <code>string</code> 类型, 必填, 插件版本号, 建议英文</li><li><code>conf</code>: <code>KiviPluginConf</code> 类型, 可选, 插件初始化配置</li></ul><p><strong>返回值</strong>：<code>KiviPlugin</code> 实例</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// KiviPluginConf 类型定义</span></span>
<span class="line"><span style="color:#C678DD;">interface</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">KiviPluginConf</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">enableGroups</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">[]</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">enableFriends</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">number</span><span style="color:#ABB2BF;">[]</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">kiviPlugin</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;demo&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;0.1.0&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre></div>`,6),g={id:"plugin-name",tabindex:"-1"},u=s("a",{class:"header-anchor",href:"#plugin-name","aria-hidden":"true"},"#",-1),F=o(`<p>实例化 <code>KiviPlugin</code> 时传入的插件名, <code>string</code> 类型。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">kiviPlugin</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;demo&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;0.1.0&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onMounted</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// demo</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span></code></pre></div>`,2),A={id:"plugin-version",tabindex:"-1"},_=s("a",{class:"header-anchor",href:"#plugin-version","aria-hidden":"true"},"#",-1),h=o(`<p>实例化 <code>KiviPlugin</code> 时传入的插件版本号, <code>string</code> 类型。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">kiviPlugin</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;demo&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;0.1.0&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onMounted</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">version</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 0.1.0</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">小提示</p><p>建议引入 <code>package.json</code> 的版本号作为插件版本以便统一管理, 如：</p></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">version</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;./package.json&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">kiviPlugin</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;demo&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">version</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre></div>`,4),C={id:"plugin-datadir",tabindex:"-1"},E=s("a",{class:"header-anchor",href:"#plugin-datadir","aria-hidden":"true"},"#",-1),m=o(`<p>插件数据存放目录, <code>框架目录/data/plugins/[name]</code>（绝对路径） 注意这里的 <code>name</code> 是实例化插件的时候传入的 <code>name</code>, <code>string</code> 类型。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">kiviPlugin</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;demo&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;0.1.0&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onMounted</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">dataDir</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// [框架目录]/data/plugins/demo</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span></code></pre></div>`,2),v={id:"plugin-logger",tabindex:"-1"},f=s("a",{class:"header-anchor",href:"#plugin-logger","aria-hidden":"true"},"#",-1),b=o(`<p><a href="https://github.com/log4js-node/log4js-node#usage" target="_blank" rel="noreferrer">log4js</a> 的 <code>Logger</code> 实例, 专用来给插件规范化输出调试日志, 可以调用其上的各种不同等级（<code>level</code>）的调试函数打印日志。详情参考 <a href="https://log4js-node.github.io/log4js-node/" target="_blank" rel="noreferrer">log4js 官方文档</a>。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">kiviPlugin</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;demo&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;0.1.0&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">logger</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">debug</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;调试信息&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">logger</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">info</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;常规日志&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">logger</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">warn</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;警告信息&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">logger</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">error</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;错误信息&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">logger</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">fatal</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;致命错误&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre></div>`,2),D={id:"plugin-bot",tabindex:"-1"},k=s("a",{class:"header-anchor",href:"#plugin-bot","aria-hidden":"true"},"#",-1),T=o(`<p>oicq 的 <code>Client</code> 实例, 可以调用各种 Bot API, 仅在 <code>onMounted</code> 和 <code>onUnmounted</code> 中（即被挂载了之后）才能被访问到, <code>Client</code> 类型。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onMounted</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">bot</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">uin</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// Bot 的 QQ 账号</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span></code></pre></div>`,2),P={id:"plugin-admins",tabindex:"-1"},S=s("a",{class:"header-anchor",href:"#plugin-admins","aria-hidden":"true"},"#",-1),x=o(`<p>Bot 管理员列表, <code>number[]</code> 类型。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onMounted</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">admins</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// [1141284758]</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span></code></pre></div>`,2),M={id:"plugin-mainadmin",tabindex:"-1"},I=s("a",{class:"header-anchor",href:"#plugin-mainadmin","aria-hidden":"true"},"#",-1),V=o(`<div class="info custom-block"><p class="custom-block-title">小提示</p><p>等价于 <code>plugin.admins[0]</code></p></div><p>Bot 主管理员, <code>number</code> 类型。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onMounted</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">mainAdmin</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// Bot 主管理员</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span></code></pre></div>`,3),w={id:"plugin-subadmins",tabindex:"-1"},q=s("a",{class:"header-anchor",href:"#plugin-subadmins","aria-hidden":"true"},"#",-1),N=o(`<div class="info custom-block"><p class="custom-block-title">小提示</p><p>等价于 <code>plugin.admins.slice(1)</code></p></div><p>Bot 副管理员列表, <code>number[]</code> 类型。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onMounted</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">subAdmins</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// Bot 副管理员列表</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span></code></pre></div>`,3),j={id:"plugin-onmounted",tabindex:"-1"},R=s("a",{class:"header-anchor",href:"#plugin-onmounted","aria-hidden":"true"},"#",-1),K=o(`<p>插件的生命周期函数, 插件被启用时, 传入的函数会被调用。</p><p>函数签名：<code>onMounted(handler)</code></p><p><strong>参数说明</strong>：</p><ul><li><code>handler</code>: 类型 <code>(bot: Client, admins: number[]) =&gt; void</code>, 插件被启用的处理函数, 必填, 默认传入 Bot 实例（<a href="https://oicqjs.github.io/oicq/classes/Client.html" target="_blank" rel="noreferrer"><code>Client</code> 类</a>）和 Bot 管理员列表。插件主要逻辑请写在此函数体内。</li></ul><p><strong>无返回值</strong></p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">kiviPlugin</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;demo&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;0.1.0&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onMounted</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">bot</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">admins</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;插件被启用了！&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span></code></pre></div>`,6),O={id:"plugin-onunmounted",tabindex:"-1"},U=s("a",{class:"header-anchor",href:"#plugin-onunmounted","aria-hidden":"true"},"#",-1),J=o(`<p>插件的生命周期函数, 插件被禁用时, 传入的函数会被调用, 你可以在这里处理插件善后逻辑, 如关闭关闭数据库, 断开相关连接, 停止相关服务, 释放内存等。</p><p>函数签名：<code>onUnmounted(handler)</code></p><p><strong>参数说明</strong>：</p><ul><li><code>handler</code>: 类型 <code>(bot: Client, admins: number[]) =&gt; void</code>, 插件被禁用的处理函数, 必填, 默认传入 Bot 实例（<a href="https://oicqjs.github.io/oicq/classes/Client.html" target="_blank" rel="noreferrer"><code>Client</code> 类</a>）和 Bot 管理员列表。</li></ul><p><strong>无返回值</strong></p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">kiviPlugin</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;demo&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;0.1.0&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onUnmounted</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">bot</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">admins</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;插件被禁用了！&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span></code></pre></div>`,6),$={id:"plugin-throwpluginerror",tabindex:"-1"},G=s("a",{class:"header-anchor",href:"#plugin-throwpluginerror","aria-hidden":"true"},"#",-1),L=o(`<p>抛出一个 <code>KiviPluginError</code> 标准错误, 会被框架捕获并输出到控制台日志。</p><p>函数签名：<code>throwPluginError(message)</code></p><p><strong>参数说明</strong>：</p><ul><li><code>message</code>: <code>string</code> 类型, 必填, 错误信息</li></ul><p><strong>无返回值</strong></p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onMounted</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">throwPluginError</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;插件出错了！&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span></code></pre></div>`,6),Q={id:"plugin-saveconfig",tabindex:"-1"},H=s("a",{class:"header-anchor",href:"#plugin-saveconfig","aria-hidden":"true"},"#",-1),W=o(`<p>将数据保存到插件数据目录（传入普通 JS 对象, 储存为 JSON 格式）</p><p>函数签名：<code>saveConfig(data, [filepath], [options])</code></p><p><strong>参数说明</strong>：</p><ul><li><code>data</code>: 可转为 <code>JSON</code> 的任何合法类型, 一般是普通对象, 必填</li><li><code>filepath</code>: <code>string</code> 类型, 可选, 保存的配置文件路径, 默认为插件数据目录下的 <code>config.json</code></li><li><code>options</code>: <code>fs.WriteOptions</code> 类型, 可选, 写入配置的选项</li></ul><p><strong>返回值</strong>：<code>boolean</code> 是否写入成功</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">saveConfig</span><span style="color:#ABB2BF;">({ </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;KiviBot&#39;</span><span style="color:#ABB2BF;"> }) </span><span style="color:#7F848E;font-style:italic;">// 可以在外层保存</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onMounted</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">saveConfig</span><span style="color:#ABB2BF;">({ </span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;KiviBot&#39;</span><span style="color:#ABB2BF;"> }) </span><span style="color:#7F848E;font-style:italic;">// 也可以在内部保存</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">最佳实践</p><p>如果你想设置默认配置的同时也支持用户手动配置, 只需在 <code>onMounted</code> 中这加上这行：</p></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 插件的默认配置, 必须是普通对象, 且不包含正则等无法正常转换为 JSON 的内置对象</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">config</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onMounted</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 加载本地配置, 并覆盖默认配置（如果有）</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">saveConfig</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">assign</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">config</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">loadConfig</span><span style="color:#ABB2BF;">()))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 插件主要逻辑写在这里</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span></code></pre></div><blockquote><p>它会优先加载 <code>框架目录/data/plugins/[name]/config.json</code>) 中的配置</p></blockquote>`,9),z={id:"plugin-loadconfig",tabindex:"-1"},X=s("a",{class:"header-anchor",href:"#plugin-loadconfig","aria-hidden":"true"},"#",-1),Y=o(`<p>从插件数据目录加载保存的数据（储存为 JSON 格式, 读取为普通 JS 对象）</p><p>函数签名：<code>loadConfig([filepath], [options])</code></p><p><strong>参数说明</strong>：</p><ul><li><code>filepath</code>: <code>string</code> 类型, 可选, 读取的配置文件路径, 默认为插件数据目录下的 <code>config.json</code></li><li><code>options</code>: <code>fs.ReadOptions</code> 类型, 可选, 读取配置的选项</li></ul><p><strong>返回值</strong>：解析后的数据对象</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">config</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">loadConfig</span><span style="color:#ABB2BF;">() </span><span style="color:#7F848E;font-style:italic;">// 可以在外层读取</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onMounted</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">config</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">loadConfig</span><span style="color:#ABB2BF;">() </span><span style="color:#7F848E;font-style:italic;">// 也可以在内部读取</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">最佳实践</p><p>如果你想设置默认配置的同时也支持用户手动配置, 只需在 <code>onMounted</code> 中这加上这行：</p></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 插件的默认配置</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">config</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onMounted</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 加载本地配置, 并覆盖默认配置（如果有）</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">saveConfig</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">assign</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">config</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">loadConfig</span><span style="color:#ABB2BF;">()))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 插件主要逻辑写在这里</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span></code></pre></div><blockquote><p>它会优先加载 <code>框架目录/data/plugins/[name]/config.json</code>) 中的配置</p></blockquote>`,9),Z={id:"plugin-onmessage",tabindex:"-1"},ss=s("a",{class:"header-anchor",href:"#plugin-onmessage","aria-hidden":"true"},"#",-1),ns=o(`<div class="info custom-block"><p class="custom-block-title">小提示</p><p>等价于 <code>plugin.on(&#39;message&#39;, handler)</code></p></div><p>添加消息监听函数, 包括好友私聊、群消息以及讨论组消息, 通过 <code>event.message_type</code> 判断消息类型。如果只需要监听特定的消息类型, 请使用 <code>plugin.on</code> 监听。</p><p>函数签名：<code>onMessage(handler)</code></p><p><strong>参数说明</strong>：</p><ul><li><code>handler</code>: 类型 <code>(event: AllMessageEvent, bot: Client) =&gt; void</code>, 消息处理函数, 必填, 默认传入<a href="https://oicqjs.github.io/oicq/interfaces/EventMap.html#message" target="_blank" rel="noreferrer">消息事件数据</a>（包含群、好友和讨论组消息）</li></ul><p><strong>无返回值</strong></p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro has-focused-lines"><code><span class="line"><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onMounted</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line has-focus"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onMessage</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">event</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;">  {</span></span>
<span class="line has-focus"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">event</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">reply</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;hi, &#39;</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">event</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">sender</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">user_id</span><span style="color:#ABB2BF;">) </span></span>
<span class="line has-focus"><span style="color:#ABB2BF;">  }) </span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span></code></pre></div>`,7),ls={id:"plugin-ongroupmessage",tabindex:"-1"},as=s("a",{class:"header-anchor",href:"#plugin-ongroupmessage","aria-hidden":"true"},"#",-1),os=s("div",{class:"info custom-block"},[s("p",{class:"custom-block-title"},"小提示"),s("p",null,[n("等价于 "),s("code",null,"plugin.on('message.group', handler)")])],-1),ps=s("p",null,[n("与 "),s("code",null,"plugin.onMessage()"),n(" 类似, 只不过只处理群聊消息。")],-1),es={id:"plugin-onprivatemessage",tabindex:"-1"},ts=s("a",{class:"header-anchor",href:"#plugin-onprivatemessage","aria-hidden":"true"},"#",-1),cs=s("div",{class:"info custom-block"},[s("p",{class:"custom-block-title"},"小提示"),s("p",null,[n("等价于 "),s("code",null,"plugin.on('message.private', handler)")])],-1),rs=s("p",null,[n("与 "),s("code",null,"plugin.onMessage()"),n(" 类似, 只不过只处理私聊消息。")],-1),is={id:"plugin-onmatch",tabindex:"-1"},Bs=s("a",{class:"header-anchor",href:"#plugin-onmatch","aria-hidden":"true"},"#",-1),ys=o(`<p>消息匹配函数, 传入字符串或正则, 或字符串和正则的数组, 进行精确匹配, 匹配成功则调用函数。</p><p>函数签名：<code>onMatch(matches, handler)</code></p><p><strong>参数说明</strong>：</p><ul><li><code>matches</code>: 字符串或正则或字符串和正则的数组, 必填, 待匹配内容, 对整个消息进行匹配</li><li><code>handler</code>: 类型 <code>(event: AllMessageEvent, bot: Client) =&gt; void</code>, 消息处理函数, 必填, 默认传入<a href="https://oicqjs.github.io/oicq/interfaces/EventMap.html#message" target="_blank" rel="noreferrer">消息事件数据</a>（包含群、好友和讨论组消息）</li></ul><p><strong>无返回值</strong></p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro has-focused-lines"><code><span class="line"><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onMounted</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line has-focus"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onMatch</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;hello&#39;</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;font-style:italic;">event</span><span style="color:#ABB2BF;">)  </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line has-focus"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">event</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">reply</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;world&#39;</span><span style="color:#ABB2BF;">) </span></span>
<span class="line has-focus"><span style="color:#ABB2BF;">  }) </span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onMatch</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">/</span><span style="color:#C678DD;">^</span><span style="color:#E06C75;">hello/</span><span style="color:#C678DD;">i</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">event</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">event</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">reply</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;hi&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onMatch</span><span style="color:#ABB2BF;">([</span><span style="color:#E06C75;">/morning/</span><span style="color:#C678DD;">i</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;evening&#39;</span><span style="color:#ABB2BF;">], </span><span style="color:#E06C75;font-style:italic;">event</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">event</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">reply</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;you too&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  })</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span></code></pre></div>`,6),ds={id:"plugin-onadminmatch",tabindex:"-1"},gs=s("a",{class:"header-anchor",href:"#plugin-onadminmatch","aria-hidden":"true"},"#",-1),us=s("p",null,[n("与 "),s("code",null,"plugin.onMatch"),n(" 类似, 不同之处在于 "),s("code",null,"onAdminMatch"),n(" 只会处理所有 Bot 管理员消息。")],-1),Fs={id:"plugin-oncmd",tabindex:"-1"},As=s("a",{class:"header-anchor",href:"#plugin-oncmd","aria-hidden":"true"},"#",-1),_s=o(`<p>添加命令监听函数, 使用 <a href="https://github.com/minimistjs/minimist" target="_blank" rel="noreferrer">minimist</a> 进行命令、参数和选项的解析.</p><p>函数签名：<code>onCmd(cmds, handler)</code></p><p><strong>参数说明</strong>：</p><ul><li><code>cmds</code>: 字符串或正则或字符串和正则的数组, 必填, 待匹配的命令</li><li><code>handler</code>: 类型 <code>(event: AllMessageEvent, params: string[], options: { [string]: string }) =&gt; void</code>, 消息处理函数, 必填, 默认传入<a href="https://oicqjs.github.io/oicq/interfaces/EventMap.html#message" target="_blank" rel="noreferrer">消息事件数据</a>（包含群、好友和讨论组消息）和 <a href="https://github.com/minimistjs/minimist" target="_blank" rel="noreferrer">minimist</a> 解析后的参数和选项</li></ul><p><strong>无返回值</strong></p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro has-focused-lines"><code><span class="line"><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onMounted</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line has-focus"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 收到的消息格式应符合： &quot;点歌 稻香 --type qq --n 2&quot; </span></span>
<span class="line has-focus"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onCmd</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;点歌&#39;</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;font-style:italic;">event</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">params</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">options</span><span style="color:#ABB2BF;">)  </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line has-focus"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> [</span><span style="color:#E5C07B;">songName</span><span style="color:#ABB2BF;">, ...</span><span style="color:#E5C07B;">otherParams</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">params</span><span style="color:#ABB2BF;"> </span></span>
<span class="line has-focus"><span style="color:#ABB2BF;">    </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">n</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">type</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">options</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"></span>
<span class="line has-focus"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">event</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">reply</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">\`你点的歌是</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">type</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">平台的第</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">n</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">首</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">songName</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">) </span></span>
<span class="line has-focus"><span style="color:#ABB2BF;">  }) </span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onCmd</span><span style="color:#ABB2BF;">([</span><span style="color:#E06C75;">/morning/</span><span style="color:#C678DD;">i</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;evening&#39;</span><span style="color:#ABB2BF;">], (</span><span style="color:#E06C75;font-style:italic;">event</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">params</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">options</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">event</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">reply</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;you too&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  })</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span></code></pre></div>`,6),hs={id:"plugin-onadmincmd",tabindex:"-1"},Cs=s("a",{class:"header-anchor",href:"#plugin-onadmincmd","aria-hidden":"true"},"#",-1),Es=s("p",null,[n("与 "),s("code",null,"plugin.onCmd"),n(" 类似, 不同之处在于 "),s("code",null,"onAdminCmd"),n(" 只会处理所有 Bot 管理员消息。")],-1),ms={id:"plugin-cron",tabindex:"-1"},vs=s("a",{class:"header-anchor",href:"#plugin-cron","aria-hidden":"true"},"#",-1),fs=o(`<p>使用 <code>cron</code> 语法创建定时消息任务, 内部使用 <a href="https://github.com/node-cron/node-cron" target="_blank" rel="noreferrer">node-cron</a> 实现。使用此方式添加的定时任务会在插件被禁用时自动取消, 无需手动处理。</p><blockquote><p><code>cron</code> 语法说明参考<a href="https://github.com/node-cron/node-cron#cron-syntax" target="_blank" rel="noreferrer">这里</a></p></blockquote><p>函数签名：<code>cron(cronExpression, handler)</code></p><p><strong>参数说明</strong>：</p><ul><li><code>cronExpression</code>: <code>string</code> 类型, 必填, <code>cron</code> 表达式</li><li><code>handler</code>: 类型 <code>(bot: Client, admins: number[]) =&gt; void</code>, 定时任务函数, 默认传入 Bot 实例（<a href="https://oicqjs.github.io/oicq/classes/Client.html" target="_blank" rel="noreferrer"><code>Client</code> 类</a>）和 Bot 管理员列表</li></ul><p><strong>返回值</strong>: <code>node-cron</code> 的 <code>Task</code> 实例, 可以调用其上的 <code>stop</code> 方法取消定时任务。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onMounted</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">bot</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">admins</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// 每 3 秒钟触发</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">task</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">cron</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;*/3 * * * * *&#39;</span><span style="color:#ABB2BF;">, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">bot</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">pickFriend</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">mainAdmin</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">sendMsg</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;cron trigger!&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#7F848E;font-style:italic;">// task.stop()</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span></code></pre></div>`,7),bs={id:"plugin-log",tabindex:"-1"},Ds=s("a",{class:"header-anchor",href:"#plugin-log","aria-hidden":"true"},"#",-1),ks=s("div",{class:"info custom-block"},[s("p",{class:"custom-block-title"},"小提示"),s("p",null,[n("等价于 "),s("code",null,"plugin.logger.log()")])],-1),Ts=s("p",null,"打印消息到控制台, 可用于插件调试与错误输出等。",-1),Ps={id:"plugin-debug",tabindex:"-1"},Ss=s("a",{class:"header-anchor",href:"#plugin-debug","aria-hidden":"true"},"#",-1),xs=s("div",{class:"info custom-block"},[s("p",{class:"custom-block-title"},"小提示"),s("p",null,[n("等价于 "),s("code",null,"plugin.logger.debug()")])],-1),Ms=s("p",null,[n("同 "),s("code",null,"plugin.log()"),n(", 只不过仅在 "),s("code",null,"debug"),n(" 及更低的 log level 下可见，可用于插件开发调试，并在正式环境（默认 log level 为 info）下不可见。")],-1),Is={id:"plugin-on",tabindex:"-1"},Vs=s("a",{class:"header-anchor",href:"#plugin-on","aria-hidden":"true"},"#",-1),ws=o(`<p>监听 <a href="/api/oicq_events.html"><code>oicq</code> v2 标准事件</a>, 并使用 <code>hander</code> 处理。</p><p>函数签名：<code>on(eventName, handler)</code></p><p>不同事件的 <code>handler</code> 的事件回调参数不同, 请参考 <a href="/api/oicq_events.html"><code>oicq</code> v2 标准事件</a>中的对应事件说明。</p><div class="tip custom-block"><p class="custom-block-title">小提示</p><p><code>plugin.on()</code> 和 <code>plugin.once()</code> 监听的事件不需要在 <code>plugin.onUnmounted()</code> 中手动取消监听, 插件会自动收集监听函数和定时任务等, 在插件被禁用的时候自动将其移除。</p></div><div class="warning custom-block"><p class="custom-block-title">请注意</p><p>插件不会自动处理 <code>bot</code> 监听的事件, 非特殊需要, 请勿使用 <code>bot.on()</code> 和 <code>bot.once()</code> 等进行事件监听, 否则需要在 <code>plugin.onUnmounted()</code> 中手动取消监听, 不然在插件被禁用后, 无法自动取消这些已监听的事件。</p></div><p>监听“好友申请”事件并自动同意的实例:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro"><code><span class="line"><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onMounted</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E5C07B;">plugin</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">on</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;request.friend.add&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">event</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E5C07B;">event</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">approve</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  })</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span></code></pre></div>`,7),qs={id:"plugin-off",tabindex:"-1"},Ns=s("a",{class:"header-anchor",href:"#plugin-off","aria-hidden":"true"},"#",-1),js=o('<p>取消监听 <a href="/api/oicq_events.html"><code>oicq</code> v2 标准事件</a>。</p><p>函数签名：<code>off(eventName, handler)</code></p><p>不同事件的 <code>handler</code> 的事件回调参数不同, 请参考 <a href="/api/oicq_events.html"><code>oicq</code> v2 标准事件</a>中的对应事件说明。</p>',3),Rs={id:"plugin-once",tabindex:"-1"},Ks=s("a",{class:"header-anchor",href:"#plugin-once","aria-hidden":"true"},"#",-1),Os=o('<p><strong>单次</strong>监听 <a href="/api/oicq_events.html"><code>oicq</code> v2 标准事件</a>, 并使用 <code>hander</code> 处理。</p><p>函数签名：<code>on(eventName, handler)</code></p><p>不同事件的 <code>handler</code> 的事件回调参数不同, 请参考 <a href="/api/oicq_events.html"><code>oicq</code> v2 标准事件</a>中的对应事件说明。</p>',3);function Us(Js,$s,Gs,Ls,Qs,Hs){const l=c("Badge");return t(),e("div",null,[i,s("h2",B,[n("KiviPlugin()"),a(l,{type:"warning",text:"插件主类"}),n(),y]),d,s("h2",g,[n("plugin.name "),a(l,{type:"warning",text:"属性"}),n(),u]),F,s("h2",A,[n("plugin.version "),a(l,{type:"warning",text:"属性"}),n(),_]),h,s("h2",C,[n("plugin.dataDir "),a(l,{type:"warning",text:"属性"}),n(),E]),m,s("h2",v,[n("plugin.logger "),a(l,{type:"warning",text:"属性"}),n(),f]),b,s("h2",D,[n("plugin.bot "),a(l,{type:"warning",text:"属性"}),n(),k]),T,s("h2",P,[n("plugin.admins "),a(l,{type:"warning",text:"getter 属性"}),n(),S]),x,s("h2",M,[n("plugin.mainAdmin "),a(l,{type:"warning",text:"getter 属性"}),n(),I]),V,s("h2",w,[n("plugin.subAdmins "),a(l,{type:"warning",text:"getter 属性"}),n(),q]),N,s("h2",j,[n("plugin.onMounted() "),a(l,{type:"warning",text:"方法"}),n(),R]),K,s("h2",O,[n("plugin.onUnmounted() "),a(l,{type:"warning",text:"方法"}),n(),U]),J,s("h2",$,[n("plugin.throwPluginError() "),a(l,{type:"warning",text:"方法"}),n(),G]),L,s("h2",Q,[n("plugin.saveConfig() "),a(l,{type:"warning",text:"方法"}),n(),H]),W,s("h2",z,[n("plugin.loadConfig() "),a(l,{type:"warning",text:"方法"}),n(),X]),Y,s("h2",Z,[n("plugin.onMessage() "),a(l,{type:"warning",text:"方法"}),n(),ss]),ns,s("h2",ls,[n("plugin.onGroupMessage() "),a(l,{type:"warning",text:"方法"}),n(),as]),os,ps,s("h2",es,[n("plugin.onPrivateMessage() "),a(l,{type:"warning",text:"方法"}),n(),ts]),cs,rs,s("h2",is,[n("plugin.onMatch() "),a(l,{type:"warning",text:"方法"}),n(),Bs]),ys,s("h2",ds,[n("plugin.onAdminMatch() "),a(l,{type:"warning",text:"方法"}),n(),gs]),us,s("h2",Fs,[n("plugin.onCmd() "),a(l,{type:"warning",text:"方法"}),n(),As]),_s,s("h2",hs,[n("plugin.onAdminCmd() "),a(l,{type:"warning",text:"方法"}),n(),Cs]),Es,s("h2",ms,[n("plugin.cron() "),a(l,{type:"warning",text:"方法"}),n(),vs]),fs,s("h2",bs,[n("plugin.log() "),a(l,{type:"warning",text:"方法"}),n(),Ds]),ks,Ts,s("h2",Ps,[n("plugin.debug() "),a(l,{type:"warning",text:"方法"}),n(),Ss]),xs,Ms,s("h2",Is,[n("plugin.on() "),a(l,{type:"warning",text:"方法"}),n(),Vs]),ws,s("h2",qs,[n("plugin.off() "),a(l,{type:"warning",text:"方法"}),n(),Ns]),js,s("h2",Rs,[n("plugin.once() "),a(l,{type:"warning",text:"方法"}),n(),Ks]),Os])}const Xs=p(r,[["render",Us]]);export{zs as __pageData,Xs as default};
